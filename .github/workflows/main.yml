name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Determine what the next tag version will be
      - name: Github Tag
        id: get-tag
        uses: anothrNick/github-tag-action@1.39.0
        env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              DRY_RUN: true
            
      # Build and publish application to GitHub packages     
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'maven'
          server-id: github
          server-username: GITHUB_USER_REF  # env variable name for username
          server-password: GITHUB_TOKEN_REF

      - name: Build with Maven
        run: | 
          echo 'Tag generated in previous step'
          echo '${{ steps.get-tag.outputs.new_tag }}'
          mvn versions:set -DnewVersion=${{ steps.get-tag.outputs.new_tag }}
          mvn --batch-mode deploy
         
        env:
          GITHUB_USER_REF: ${{ secrets.GIT_USERNAME }}
          GITHUB_TOKEN_REF: ${{ secrets.GIT_TOKEN }}
          
      - name: Create a Release
        uses: elgohr/Github-Release-Action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          title: ${{ steps.get-tag.outputs.new_tag }}
          
      - name: Bump GitHub Tag
        uses: anothrNick/github-tag-action@1.39.0
        env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
